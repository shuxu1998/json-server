{"ast":null,"code":"var _jsxFileName = \"/Users/shuxie/Desktop/json-server/eventlist-reactapp/src/Apptest1.js\";\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport { Api } from \"./Api\";\nimport \"./styles/index.css\";\nimport AddEvents from \"./components/AddEvents\";\nimport EventRow from \"./components/EventRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      eventLists: [],\n      DataisLoaded: false\n    };\n  }\n\n  async componentDidMount() {\n    const eventLists = await Api.getEvents(); // console.log(eventLists)\n\n    this.setState({\n      eventLists: eventLists,\n      DataisLoaded: true\n    });\n  }\n\n  render() {\n    const {\n      DataisLoaded,\n      eventLists\n    } = this.state;\n\n    const dateConverter = milliseconds => {\n      var convertedDate = new Date(+milliseconds);\n      var year = convertedDate.getFullYear();\n      var month = convertedDate.getMonth() + 1;\n      var day = convertedDate.getDate();\n\n      if (month < 10) {\n        month = \"0\" + month;\n      }\n\n      if (day < 10) {\n        day = \"0\" + day;\n      }\n\n      return year + \"-\" + month + \"-\" + day;\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.add,\n          className: \"btn\",\n          children: \"Add New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"event-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header__leftGroup\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Event name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header__left-centerGroup\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"start date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header__right-centerGroup\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"end date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header__rightGroup\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          class: \"event-content\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [this.state.eventLists.map(e => {\n              return /*#__PURE__*/_jsxDEV(EventRow, {\n                eventName: e.eventName,\n                startDate: e.startDate,\n                endDate: e.endDate,\n                id: e.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(AddEvents, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/shuxie/Desktop/json-server/eventlist-reactapp/src/Apptest1.js"],"names":["ReactDOM","React","Api","AddEvents","EventRow","App","Component","constructor","props","state","eventLists","DataisLoaded","componentDidMount","getEvents","setState","render","dateConverter","milliseconds","convertedDate","Date","year","getFullYear","month","getMonth","day","getDate","add","map","e","eventName","startDate","endDate","id"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,OAAO,oBAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,EADD;AAEXC,MAAAA,YAAY,EAAE;AAFH,KAAb;AAID;;AAEsB,QAAjBC,iBAAiB,GAAG;AACxB,UAAMF,UAAU,GAAG,MAAMR,GAAG,CAACW,SAAJ,EAAzB,CADwB,CAExB;;AACA,SAAKC,QAAL,CAAc;AACZJ,MAAAA,UAAU,EAAEA,UADA;AAEZC,MAAAA,YAAY,EAAE;AAFF,KAAd;AAID;;AAEDI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEJ,MAAAA,YAAF;AAAgBD,MAAAA;AAAhB,QAA+B,KAAKD,KAA1C;;AACA,UAAMO,aAAa,GAAIC,YAAD,IAAkB;AACtC,UAAIC,aAAa,GAAG,IAAIC,IAAJ,CAAS,CAACF,YAAV,CAApB;AAEA,UAAIG,IAAI,GAAGF,aAAa,CAACG,WAAd,EAAX;AACA,UAAIC,KAAK,GAAGJ,aAAa,CAACK,QAAd,KAA2B,CAAvC;AACA,UAAIC,GAAG,GAAGN,aAAa,CAACO,OAAd,EAAV;;AAEA,UAAIH,KAAK,GAAG,EAAZ,EAAgB;AACdA,QAAAA,KAAK,GAAG,MAAMA,KAAd;AACD;;AAED,UAAIE,GAAG,GAAG,EAAV,EAAc;AACZA,QAAAA,GAAG,GAAG,MAAMA,GAAZ;AACD;;AAED,aAAOJ,IAAI,GAAG,GAAP,GAAaE,KAAb,GAAqB,GAArB,GAA2BE,GAAlC;AACD,KAhBD;;AAkBA,wBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAE,KAAKE,GAAtB;AAA2B,UAAA,SAAS,EAAC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,mBAAf;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,0BAAf;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF,eAOE;AAAK,YAAA,SAAS,EAAC,2BAAf;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAPF,eAUE;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAkBE;AAAO,UAAA,KAAK,EAAC,eAAb;AAAA,iCACE;AAAA,uBACG,KAAKjB,KAAL,CAAWC,UAAX,CAAsBiB,GAAtB,CAA2BC,CAAD,IAAO;AAChC,kCACE,QAAC,QAAD;AACE,gBAAA,SAAS,EAAEA,CAAC,CAACC,SADf;AAEE,gBAAA,SAAS,EAAED,CAAC,CAACE,SAFf;AAGE,gBAAA,OAAO,EAAEF,CAAC,CAACG,OAHb;AAIE,gBAAA,EAAE,EAAEH,CAAC,CAACI;AAJR;AAAA;AAAA;AAAA;AAAA,sBADF;AAQD,aATA,CADH,eAWE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,oBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA4DD;;AAnG+B;;AAsGlC,eAAe3B,GAAf","sourcesContent":["import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport { Api } from \"./Api\";\nimport \"./styles/index.css\";\nimport AddEvents from \"./components/AddEvents\";\nimport EventRow from \"./components/EventRow\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      eventLists: [],\n      DataisLoaded: false,\n    };\n  }\n\n  async componentDidMount() {\n    const eventLists = await Api.getEvents();\n    // console.log(eventLists)\n    this.setState({\n      eventLists: eventLists,\n      DataisLoaded: true,\n    });\n  }\n\n  render() {\n    const { DataisLoaded, eventLists } = this.state;\n    const dateConverter = (milliseconds) => {\n      var convertedDate = new Date(+milliseconds);\n\n      var year = convertedDate.getFullYear();\n      var month = convertedDate.getMonth() + 1;\n      var day = convertedDate.getDate();\n\n      if (month < 10) {\n        month = \"0\" + month;\n      }\n\n      if (day < 10) {\n        day = \"0\" + day;\n      }\n\n      return year + \"-\" + month + \"-\" + day;\n    };\n\n    return (\n      <div className=\"event-container\">\n        <div className=\"table-container\">\n          <button onClick={this.add} className=\"btn\">\n            Add New\n          </button>\n          <header className=\"event-header\">\n            <div className=\"header__leftGroup\">\n              <h3>Event name</h3>\n            </div>\n            <div className=\"header__left-centerGroup\">\n              <h3>start date</h3>\n            </div>\n            <div className=\"header__right-centerGroup\">\n              <h3>end date</h3>\n            </div>\n            <div className=\"header__rightGroup\">\n              <h3>Actions</h3>\n            </div>\n          </header>\n          <table class=\"event-content\">\n            <tbody>\n              {this.state.eventLists.map((e) => {\n                return (\n                  <EventRow\n                    eventName={e.eventName}\n                    startDate={e.startDate}\n                    endDate={e.endDate}\n                    id={e.id}\n                  />\n                );\n              })}\n              <AddEvents/>\n              {/* {items.map((item) => (\n                <tr className=\"input-row\">\n                  <td className=\"header__leftGroup\">\n                    <input value={item.eventName} type=\"text\" />\n                  </td>\n                  <td className=\"header__left-centerGroup\">\n                    <input value={dateConverter(item.startDate)} type=\"text\" />\n                  </td>\n                  <td className=\"header__right-centerGroup\">\n                    <input value={dateConverter(item.endDate)} type=\"text\" />\n                  </td>\n\n                  <td className=\"header__rightGroup\">\n                    <button onClick={this.edit} class=\"btn\">\n                      EDIT\n                    </button>\n                    <button onClick={this.delete} handlerclass=\"btn\">\n                      Delete\n                    </button>\n                  </td>\n                </tr>\n              ))} */}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}